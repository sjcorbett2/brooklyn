<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>

    <artifactId>brooklyn-jsgui</artifactId>

    <name>Brooklyn REST JavaScript Web GUI</name>

    <description>
        JavaScript+HTML GUI for interacting with Brooklyn, using the REST API
    </description>

    <parent>
        <groupId>io.brooklyn</groupId>
        <artifactId>brooklyn-parent</artifactId>
        <version>0.6.0-SNAPSHOT</version><!-- BROOKLYN_VERSION -->
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <dependencies>
        <dependency>
            <groupId>io.brooklyn</groupId>
            <artifactId>brooklyn-rest</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.brooklyn</groupId>
            <artifactId>brooklyn-rest</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>brooklyn-test-support</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.brooklyn</groupId>
            <artifactId>brooklyn-policy</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.brooklyn</groupId>
            <artifactId>brooklyn-locations-jclouds</artifactId>
            <version>${brooklyn.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.brooklyn</groupId>
            <artifactId>brooklyn-software-webapp</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.brooklyn</groupId>
            <artifactId>brooklyn-software-database</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.brooklyn</groupId>
            <artifactId>brooklyn-software-nosql</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/test/resources/fixtures</directory>
                <targetPath>${project.build.directory}/jasmine/fixtures</targetPath>
            </resource>
            <resource>
		<!-- TODO read from artifact -->
                <directory>${project.basedir}/../rest/src/test/resources/fixtures</directory>
                <targetPath>${project.build.directory}/jasmine/fixtures</targetPath>
            </resource>
        </resources>
        <plugins>
            <!-- run js tests with: $ mvn clean process-resources jasmine:test -->
            <!--
                 The Jasmine Maven plugin is now on version 1.3.1.0. It has several improvements,
                 but we're unable to upgrade to it because of a change to the way it handles our
                 fixtures. In 1.2 it serves target/fixtures at /fixtures.  This no longer happens
                 in 1.3.1. Ideally, the plugin would have a configuration option to include other
                 directories for Jetty to serve. If this were added we would also be able to use
                 mvn jasmine:bdd.
            -->
            <plugin>
                <groupId>com.github.searls</groupId>
                <artifactId>jasmine-maven-plugin</artifactId>
                <version>1.2.0.0</version>
                <!-- avoid double phase executions https://github.com/searls/jasmine-maven-plugin/pull/54 -->
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>FIREFOX_3</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--Tests simulate Firefox 3-->
                    <browserVersion>FIREFOX_3</browserVersion>

                    <!--Configures output file names-->
                    <junitXmlReportFileName>TEST-FIREFOX_3-jasmine.xml</junitXmlReportFileName>
                    <manualSpecRunnerHtmlFileName>FIREFOX_3-ManualSpecRunner.html</manualSpecRunnerHtmlFileName>
                    <specRunnerHtmlFileName>FIREFOX_3-SpecRunner.html</specRunnerHtmlFileName>

                    <!--Uses the require.js test spec-->
                    <specRunnerTemplate>REQUIRE_JS</specRunnerTemplate>
                    <scriptLoaderPath>js/libs/require.js</scriptLoaderPath>

                    <!--Sources-->
                    <jsSrcDir>${project.basedir}/src/main/webapp/assets</jsSrcDir>
                    <jsTestSrcDir>${project.basedir}/src/test/javascript/specs</jsTestSrcDir>
                    <customRunnerConfiguration>
                        ${project.basedir}/src/test/javascript/config.txt
                    </customRunnerConfiguration>
                </configuration>
            </plugin>


            <plugin>
                <groupId>com.github.skwakman.nodejs-maven-plugin</groupId>
                <artifactId>nodejs-maven-plugin</artifactId>
                <version>1.0.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>extract</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- target directory for node binaries -->
                    <targetDirectory>${basedir}/target/nodejs/</targetDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.mcheely</groupId>
                <artifactId>requirejs-maven-plugin</artifactId>
                <version>2.0.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>optimize</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <nodeExecutable>${basedir}/target/nodejs/node</nodeExecutable>
                    <configFile>${basedir}/src/main/webapp/assets/js/build.js</configFile>
                    <optimizerFile>${basedir}/src/main/webapp/assets/js/libs/r.js</optimizerFile>
                    <!-- Skips require.js optimization if true -->
                    <skip>false</skip>
                </configuration>
            </plugin>
        </plugins>

    </build>
</project>

